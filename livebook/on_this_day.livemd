<!-- livebook:{"autosave_interval_s":60} -->

# On this day ♫

```elixir
Mix.install(
  [{:coda, "~> 0.3"}, {:kino_explorer, "~> 0.1.8"}],
  config: [
    lastfm_archive: [
      data_dir: "./lastfm_data/",
      user: ""
    ]
  ]
)

alias Coda.OnThisDay
alias Explorer.DataFrame
alias Coda.Analytics.OnThisDay, as: OTDA

df = OTDA.dataframe()
new_on_this_day_df = OTDA.new_facet_dataframes(format: :ipc_stream)

:ok
```

## Introduction

Analytics of all the music played on this day, today in this past. This Livebook is based on data created by [lastfm_archive](https://github.com/boonious/lastfm_archive).

### Prerequisite

* [Setup, installation](https://hexdocs.pm/lastfm_archive/setup.html)
* [Columnar data transforms](https://hexdocs.pm/lastfm_archive/transforming.html): please create an archive for analytics workloads in Apache Arrow format, i.e. transform with `format: :ipc_stream` option

<!-- livebook:{"branch_parent_index":0} -->

## Overview

```elixir
{df, new_on_this_day_df} |> OnThisDay.render_overview()
```

<!-- livebook:{"branch_parent_index":0} -->

## Most played

```elixir
df |> OnThisDay.render_most_played()
```

## Explore the data

In due course, further analytics and visualisation will be presented. These include newly discovered and most frequently played music on this day over the years. Meanwhile you can interactively delve into the data using [Kino explorer](https://hexdocs.pm/kino_explorer/Kino.Explorer.html) below.

<!-- livebook:{"attrs":{"assign_to":null,"collect":true,"data_frame":"dataframe","data_frame_alias":"Elixir.DataFrame","is_data_frame":null,"missing_require":"Elixir.Explorer.DataFrame","operations":[{"active":true,"columns":["track","artist","album"],"data_options":{"album":"string","artist":"string","datetime":"datetime[μs]","id":"string","mmdd":"string","track":"string","year":"integer"},"operation_type":"group_by"},{"active":true,"columns":["id"],"data_options":{"album":"string","artist":"string","datetime":"datetime[μs]","id":"string","mmdd":"string","track":"string","year":"integer"},"operation_type":"summarise","query":"count"},{"active":true,"data_options":{"album":"string","artist":"string","id_count":"integer","track":"string"},"direction":"desc","operation_type":"sorting","sort_by":"id_count"}]},"chunks":null,"kind":"Elixir.KinoExplorer.DataTransformCell","livebook_object":"smart_cell"} -->

```elixir
require Explorer.DataFrame

dataframe
|> DataFrame.lazy()
|> DataFrame.new(lazy: true)
|> DataFrame.group_by(["track", "artist", "album"])
|> DataFrame.summarise(id_count: count(id))
|> DataFrame.arrange(desc: id_count)
|> DataFrame.collect()
```

<!-- livebook:{"offset":2643,"stamp":{"token":"QTEyOEdDTQ.EMY-aCgpXNrONW23b8ZtxkUdnBbYN4O9Q5Sh6HXbDUxGCXV4XcOqbhDqzJ0.W2caDfGI3kgctiyL.ocznx0ngWVvGDU8b0Lntm2VY8hZcRhFOstwihKZDtF37DxxyxwKS2gozCFAcYbb4w55vjj5m5x0fvpU.xreHH1HmhLrEb5JbX5FbOA","version":1}} -->
